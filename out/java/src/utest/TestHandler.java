// Generated by Haxe 4.0.0-preview.4+1e3e5e016
package utest;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TestHandler<T> extends haxe.lang.HxObject
{
	static
	{
		//line 7 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		utest.TestHandler.POLLING_TIME = 10;
	}
	
	public TestHandler(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public TestHandler(utest.TestFixture fixture)
	{
		//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		utest.TestHandler.__hx_ctor_utest_TestHandler(((utest.TestHandler<T>) (this) ), ((utest.TestFixture) (fixture) ));
	}
	
	
	protected static <T_c> void __hx_ctor_utest_TestHandler(utest.TestHandler<T_c> __hx_this, utest.TestFixture fixture)
	{
		//line 20 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		__hx_this.wasBound = false;
		//line 10 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		__hx_this.finished = false;
		//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		{
			//line 23 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			if (( fixture == null )) 
			{
				//line 23 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
				throw haxe.lang.HaxeException.wrap("fixture argument is null");
			}
			
			//line 24 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			__hx_this.fixture = fixture;
			//line 25 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			__hx_this.results = new haxe.ds.List<utest.Assertation>();
			//line 26 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			__hx_this.asyncStack = new haxe.ds.List();
			//line 27 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			__hx_this.onTested = new utest.Dispatcher<utest.TestHandler<T_c>>();
			//line 28 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			__hx_this.onTimeout = new utest.Dispatcher<utest.TestHandler<T_c>>();
			//line 29 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			__hx_this.onComplete = new utest.Dispatcher<utest.TestHandler<T_c>>();
			//line 30 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			__hx_this.onPrecheck = new utest.Dispatcher<utest.TestHandler<T_c>>();
			//line 32 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			if (( haxe.lang.Runtime.toString(fixture.ignoringInfo) != null )) 
			{
				//line 33 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
				__hx_this.results.add(utest.Assertation.Ignore(haxe.lang.Runtime.toString(fixture.ignoringInfo)));
			}
			
		}
		
	}
	
	
	public static int POLLING_TIME;
	
	public static haxe.root.Array<haxe.StackItem> exceptionStack(java.lang.Object pops)
	{
		//line 84 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		int pops1 = ( (haxe.lang.Runtime.eq(pops, null)) ? (2) : (((int) (haxe.lang.Runtime.toInt(pops)) )) );
		//line 85 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		haxe.root.Array<haxe.StackItem> stack = haxe.CallStack.exceptionStack();
		//line 86 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		while (( pops1-- > 0 ))
		{
			//line 87 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			stack.pop();
		}
		
		//line 88 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		return stack;
	}
	
	
	public haxe.ds.List<utest.Assertation> results;
	
	public utest.TestFixture fixture;
	
	public boolean finished;
	
	public haxe.ds.List asyncStack;
	
	public utest.Dispatcher<utest.TestHandler<T>> onTested;
	
	public utest.Dispatcher<utest.TestHandler<T>> onTimeout;
	
	public utest.Dispatcher<utest.TestHandler<T>> onComplete;
	
	public utest.Dispatcher<utest.TestHandler<T>> onPrecheck;
	
	public haxe.lang.Function precheck;
	
	public boolean wasBound;
	
	public void execute()
	{
		//line 37 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		utest.TestHandler<T> _gthis = this;
		//line 38 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		if (( haxe.lang.Runtime.toString(this.fixture.ignoringInfo) != null )) 
		{
			//line 39 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			this.executeFinally();
			//line 40 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			return ;
		}
		
		//line 44 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		boolean[] isSync = new boolean[]{true};
		//line 45 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		boolean[] expectingAsync = new boolean[]{true};
		//line 46 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		haxe.lang.Function run = new utest.TestHandler_execute_46__Fun<T>(isSync, expectingAsync, _gthis);
		//line 55 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		try 
		{
			//line 56 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			this.executeMethod(this.fixture.setup);
			//line 57 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			this.executeAsyncMethod(this.fixture.setupAsync, run);
			//line 58 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			if ( ! (expectingAsync[0]) ) 
			{
				//line 59 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
				this.executeFixtureMethod();
			}
			
		}
		catch (java.lang.Throwable catchallException)
		{
			//line 55 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			haxe.lang.Exceptions.setException(catchallException);
			//line 62 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			java.lang.Object realException = ( (( catchallException instanceof haxe.lang.HaxeException )) ? (((haxe.lang.HaxeException) (catchallException) ).obj) : (catchallException) );
			//line 62 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			{
				//line 62 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
				java.lang.Object e = realException;
				//line 62 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
				this.results.add(utest.Assertation.SetupError(e, utest.TestHandler.exceptionStack(null)));
			}
			
		}
		
		
		//line 64 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		isSync[0] = false;
		//line 65 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		if ( ! (expectingAsync[0]) ) 
		{
			//line 66 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			this.executeFinally();
		}
		
	}
	
	
	public void executeFixtureMethod()
	{
		//line 72 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		try 
		{
			//line 72 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			this.executeMethod(this.fixture.method);
		}
		catch (java.lang.Throwable catchallException)
		{
			//line 71 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			haxe.lang.Exceptions.setException(catchallException);
			//line 74 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			java.lang.Object realException = ( (( catchallException instanceof haxe.lang.HaxeException )) ? (((haxe.lang.HaxeException) (catchallException) ).obj) : (catchallException) );
			//line 74 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			{
				//line 74 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
				java.lang.Object e = realException;
				//line 74 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
				this.results.add(utest.Assertation.Error(e, utest.TestHandler.exceptionStack(null)));
			}
			
		}
		
		
	}
	
	
	public void executeFinally()
	{
		//line 79 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		this.onPrecheck.dispatch(this);
		//line 80 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		this.checkTested();
	}
	
	
	public void checkTested()
	{
		//line 93 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		if (( haxe.lang.Runtime.eq(this.expiration, null) || ( this.asyncStack.length == 0 ) )) 
		{
			//line 94 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			this.tested();
		}
		else
		{
			//line 95 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			if (( haxe.root.Sys.time() > ((double) (haxe.lang.Runtime.toDouble(this.expiration)) ) )) 
			{
				//line 96 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
				this.timeout();
			}
			else
			{
				//line 98 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
				haxe.Timer.delay(((haxe.lang.Function) (new haxe.lang.Closure(this, "checkTested")) ), 10);
			}
			
		}
		
	}
	
	
	public java.lang.Object expiration;
	
	public void setTimeout(int timeout)
	{
		//line 110 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		double newexpire = ( haxe.root.Sys.time() + ( ((double) (timeout) ) / 1000 ) );
		//line 111 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		this.expiration = ( (haxe.lang.Runtime.eq(this.expiration, null)) ? (newexpire) : (( (( newexpire > ((double) (haxe.lang.Runtime.toDouble(this.expiration)) ) )) ? (newexpire) : (this.expiration) )) );
	}
	
	
	public void bindHandler()
	{
		//line 115 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		if (this.wasBound) 
		{
			//line 115 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			return ;
		}
		
		//line 116 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		utest.Assert.results = this.results;
		//line 117 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		utest.Assert.createAsync = ((haxe.lang.Function) (new haxe.lang.Closure(this, "addAsync")) );
		//line 118 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		utest.Assert.createEvent = ((haxe.lang.Function) (new haxe.lang.Closure(this, "addEvent")) );
		//line 119 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		this.wasBound = true;
	}
	
	
	public void unbindHandler()
	{
		//line 124 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		if ( ! (this.wasBound) ) 
		{
			//line 124 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			return ;
		}
		
		//line 125 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		utest.Assert.results = null;
		//line 126 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		utest.Assert.createAsync = ( (( utest.TestHandler_unbindHandler_126__Fun.__hx_current != null )) ? (utest.TestHandler_unbindHandler_126__Fun.__hx_current) : (utest.TestHandler_unbindHandler_126__Fun.__hx_current = ((utest.TestHandler_unbindHandler_126__Fun) (new utest.TestHandler_unbindHandler_126__Fun()) )) );
		//line 127 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		utest.Assert.createEvent = ( (( utest.TestHandler_unbindHandler_127__Fun.__hx_current != null )) ? (utest.TestHandler_unbindHandler_127__Fun.__hx_current) : (utest.TestHandler_unbindHandler_127__Fun.__hx_current = ((utest.TestHandler_unbindHandler_127__Fun) (new utest.TestHandler_unbindHandler_127__Fun()) )) );
		//line 128 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		this.wasBound = false;
	}
	
	
	public haxe.lang.Function addAsync(haxe.lang.Function f, java.lang.Object timeout)
	{
		//line 155 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		int timeout1 = ( (haxe.lang.Runtime.eq(timeout, null)) ? (250) : (((int) (haxe.lang.Runtime.toInt(timeout)) )) );
		//line 156 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		if (( null == f )) 
		{
			//line 157 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			f = ( (( utest.TestHandler_addAsync_157__Fun.__hx_current != null )) ? (utest.TestHandler_addAsync_157__Fun.__hx_current) : (utest.TestHandler_addAsync_157__Fun.__hx_current = ((utest.TestHandler_addAsync_157__Fun) (new utest.TestHandler_addAsync_157__Fun()) )) );
		}
		
		//line 158 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		this.asyncStack.add(f);
		//line 159 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		utest.TestHandler<T> handler = this;
		//line 160 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		this.setTimeout(timeout1);
		//line 161 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		return new utest.TestHandler_addAsync_161__Fun<T>(handler, f);
	}
	
	
	public <EventArg> haxe.lang.Function addEvent(haxe.lang.Function f, java.lang.Object timeout)
	{
		//line 175 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		int timeout1 = ( (haxe.lang.Runtime.eq(timeout, null)) ? (250) : (((int) (haxe.lang.Runtime.toInt(timeout)) )) );
		//line 176 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		this.asyncStack.add(f);
		//line 177 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		utest.TestHandler<T> handler = this;
		//line 178 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		this.setTimeout(timeout1);
		//line 179 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		return new utest.TestHandler_addEvent_179__Fun<T, EventArg>(handler, f);
	}
	
	
	public void executeMethod(java.lang.String name)
	{
		//line 194 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		if (( name == null )) 
		{
			//line 194 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			return ;
		}
		
		//line 195 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		this.bindHandler();
		//line 196 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		haxe.root.Reflect.callMethod(this.fixture.target, haxe.root.Reflect.field(this.fixture.target, name), new haxe.root.Array(new java.lang.Object[]{}));
	}
	
	
	public void executeAsyncMethod(java.lang.String name, haxe.lang.Function done)
	{
		//line 200 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		if (( name == null )) 
		{
			//line 201 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			done.__hx_invoke0_o();
			//line 202 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			return ;
		}
		
		//line 204 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		this.bindHandler();
		//line 205 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		haxe.root.Reflect.callMethod(this.fixture.target, haxe.root.Reflect.field(this.fixture.target, name), new haxe.root.Array(new java.lang.Object[]{done}));
	}
	
	
	public void tested()
	{
		//line 209 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		if (( this.results.length == 0 )) 
		{
			//line 210 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			this.results.add(utest.Assertation.Warning("no assertions"));
		}
		
		//line 211 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		this.onTested.dispatch(this);
		//line 212 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		this.completed();
	}
	
	
	public void timeout()
	{
		//line 216 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		this.results.add(utest.Assertation.TimeoutError(this.asyncStack.length, new haxe.root.Array<haxe.StackItem>(new haxe.StackItem[]{})));
		//line 217 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		this.onTimeout.dispatch(this);
		//line 218 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		this.completed();
	}
	
	
	public void completed()
	{
		//line 221 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		utest.TestHandler<T> _gthis = this;
		//line 222 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		if (( haxe.lang.Runtime.toString(this.fixture.ignoringInfo) != null )) 
		{
			//line 223 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			this.completedFinally();
			//line 224 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			return ;
		}
		
		//line 228 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		boolean[] isSync = new boolean[]{true};
		//line 229 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		boolean[] expectingAsync = new boolean[]{true};
		//line 230 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		haxe.lang.Function complete = new utest.TestHandler_completed_230__Fun<T>(isSync, expectingAsync, _gthis);
		//line 238 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		try 
		{
			//line 239 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			this.executeMethod(this.fixture.teardown);
			//line 240 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			this.executeAsyncMethod(this.fixture.teardownAsync, complete);
		}
		catch (java.lang.Throwable catchallException)
		{
			//line 238 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			haxe.lang.Exceptions.setException(catchallException);
			//line 242 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			java.lang.Object realException = ( (( catchallException instanceof haxe.lang.HaxeException )) ? (((haxe.lang.HaxeException) (catchallException) ).obj) : (catchallException) );
			//line 242 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			{
				//line 242 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
				java.lang.Object e = realException;
				//line 242 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
				this.results.add(utest.Assertation.TeardownError(e, utest.TestHandler.exceptionStack(2)));
			}
			
		}
		
		
		//line 244 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		isSync[0] = false;
		//line 245 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		if ( ! (expectingAsync[0]) ) 
		{
			//line 246 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			this.completedFinally();
		}
		
	}
	
	
	public void completedFinally()
	{
		//line 251 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		this.finished = true;
		//line 252 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		this.unbindHandler();
		//line 253 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		this.onComplete.dispatch(this);
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		{
			//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			switch (field.hashCode())
			{
				case -837465425:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("expiration")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						this.expiration = ((java.lang.Object) (value) );
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						return value;
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
			}
			
			//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		{
			//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			switch (field.hashCode())
			{
				case -837465425:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("expiration")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						this.expiration = ((java.lang.Object) (value) );
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						return value;
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case 1097546742:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("results")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						this.results = ((haxe.ds.List<utest.Assertation>) (value) );
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						return value;
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case 486270997:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("wasBound")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						this.wasBound = haxe.lang.Runtime.toBool(((java.lang.Boolean) (value) ));
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						return value;
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case -843449847:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("fixture")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						this.fixture = ((utest.TestFixture) (value) );
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						return value;
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case -1291362235:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("precheck")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						this.precheck = ((haxe.lang.Function) (value) );
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						return value;
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case -673660814:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("finished")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						this.finished = haxe.lang.Runtime.toBool(((java.lang.Boolean) (value) ));
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						return value;
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case 1478591300:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("onPrecheck")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						this.onPrecheck = ((utest.Dispatcher<utest.TestHandler<T>>) (value) );
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						return value;
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case -1398473364:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("asyncStack")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						this.asyncStack = ((haxe.ds.List) (value) );
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						return value;
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case -2124458952:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("onComplete")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						this.onComplete = ((utest.Dispatcher<utest.TestHandler<T>>) (value) );
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						return value;
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case 1521240944:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("onTested")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						this.onTested = ((utest.Dispatcher<utest.TestHandler<T>>) (value) );
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						return value;
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case 22367874:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("onTimeout")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						this.onTimeout = ((utest.Dispatcher<utest.TestHandler<T>>) (value) );
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						return value;
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
			}
			
			//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		{
			//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			switch (field.hashCode())
			{
				case -1475129160:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("completedFinally")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "completedFinally")) );
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case 1097546742:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("results")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						return this.results;
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case -1402931637:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("completed")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "completed")) );
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case -843449847:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("fixture")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						return this.fixture;
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case -1313911455:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("timeout")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "timeout")) );
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case -673660814:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("finished")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						return this.finished;
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case -877169487:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("tested")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "tested")) );
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case -1398473364:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("asyncStack")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						return this.asyncStack;
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case -1295788088:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("executeAsyncMethod")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "executeAsyncMethod")) );
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case 1521240944:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("onTested")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						return this.onTested;
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case 686262454:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("executeMethod")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "executeMethod")) );
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case 22367874:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("onTimeout")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						return this.onTimeout;
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case -1259780487:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("addEvent")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "addEvent")) );
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case -2124458952:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("onComplete")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						return this.onComplete;
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case -1263544741:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("addAsync")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "addAsync")) );
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case 1478591300:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("onPrecheck")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						return this.onPrecheck;
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case 1472463892:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("unbindHandler")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "unbindHandler")) );
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case -1291362235:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("precheck")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						return this.precheck;
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case 126680141:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("bindHandler")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "bindHandler")) );
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case 486270997:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("wasBound")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						return this.wasBound;
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case 1659754143:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("setTimeout")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "setTimeout")) );
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case -1319569547:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("execute")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "execute")) );
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case -837465425:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("expiration")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						return this.expiration;
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case -1085928747:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("executeFixtureMethod")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "executeFixtureMethod")) );
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case 783441881:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("checkTested")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "checkTested")) );
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case -2009494450:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("executeFinally")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "executeFinally")) );
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
			}
			
			//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		{
			//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			switch (field.hashCode())
			{
				case -837465425:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("expiration")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						return ((double) (haxe.lang.Runtime.toDouble(this.expiration)) );
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
			}
			
			//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, java.lang.Object[] dynargs)
	{
		//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		{
			//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			switch (field.hashCode())
			{
				case -1475129160:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("completedFinally")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						this.completedFinally();
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case -1319569547:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("execute")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						this.execute();
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case -1402931637:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("completed")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						this.completed();
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case -1085928747:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("executeFixtureMethod")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						this.executeFixtureMethod();
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case -1313911455:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("timeout")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						this.timeout();
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case -2009494450:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("executeFinally")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						this.executeFinally();
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case -877169487:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("tested")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						this.tested();
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case 783441881:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("checkTested")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						this.checkTested();
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case -1295788088:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("executeAsyncMethod")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						this.executeAsyncMethod(haxe.lang.Runtime.toString(dynargs[0]), ((haxe.lang.Function) (dynargs[1]) ));
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case 1659754143:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("setTimeout")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						this.setTimeout(((int) (haxe.lang.Runtime.toInt(dynargs[0])) ));
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case 686262454:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("executeMethod")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						this.executeMethod(haxe.lang.Runtime.toString(dynargs[0]));
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case 126680141:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("bindHandler")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						this.bindHandler();
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case -1259780487:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("addEvent")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						return ((haxe.lang.Function) (this.addEvent(((haxe.lang.Function) (dynargs[0]) ), ((java.lang.Object) (dynargs[1]) ))) );
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case 1472463892:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("unbindHandler")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						this.unbindHandler();
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
				case -1263544741:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					if (field.equals("addAsync")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
						return this.addAsync(((haxe.lang.Function) (dynargs[0]) ), dynargs[1]);
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
					break;
				}
				
				
			}
			
			//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		baseArr.push("expiration");
		//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		baseArr.push("wasBound");
		//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		baseArr.push("precheck");
		//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		baseArr.push("onPrecheck");
		//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		baseArr.push("onComplete");
		//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		baseArr.push("onTimeout");
		//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		baseArr.push("onTested");
		//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		baseArr.push("asyncStack");
		//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		baseArr.push("finished");
		//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		baseArr.push("fixture");
		//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		baseArr.push("results");
		//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestHandler.hx"
		super.__hx_getFields(baseArr);
	}
	
	
}


