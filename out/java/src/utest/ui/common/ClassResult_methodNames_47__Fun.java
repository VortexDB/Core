// Generated by Haxe 4.0.0-preview.4+1e3e5e016
package utest.ui.common;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class ClassResult_methodNames_47__Fun extends haxe.lang.Function
{
	public ClassResult_methodNames_47__Fun(utest.ui.common.ClassResult me)
	{
		//line 47 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\common\\ClassResult.hx"
		super(2, 1);
		//line 47 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\common\\ClassResult.hx"
		this.me = me;
	}
	
	
	@Override public double __hx_invoke2_f(double __fn_float1, java.lang.Object __fn_dyn1, double __fn_float2, java.lang.Object __fn_dyn2)
	{
		//line 47 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\common\\ClassResult.hx"
		java.lang.String b = ( (( __fn_dyn2 == haxe.lang.Runtime.undefined )) ? (haxe.lang.Runtime.toString(__fn_float2)) : (haxe.lang.Runtime.toString(__fn_dyn2)) );
		//line 47 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\common\\ClassResult.hx"
		java.lang.String a = ( (( __fn_dyn1 == haxe.lang.Runtime.undefined )) ? (haxe.lang.Runtime.toString(__fn_float1)) : (haxe.lang.Runtime.toString(__fn_dyn1)) );
		//line 48 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\common\\ClassResult.hx"
		utest.ui.common.ResultStats as = this.me.get(a).stats;
		//line 49 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\common\\ClassResult.hx"
		utest.ui.common.ResultStats bs = this.me.get(b).stats;
		//line 50 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\common\\ClassResult.hx"
		if (as.hasErrors) 
		{
			//line 51 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\common\\ClassResult.hx"
			if ( ! (bs.hasErrors) ) 
			{
				//line 51 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\common\\ClassResult.hx"
				return ((double) (-1) );
			}
			else
			{
				//line 51 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\common\\ClassResult.hx"
				if (( as.errors == bs.errors )) 
				{
					//line 51 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\common\\ClassResult.hx"
					return ((double) (((int) (haxe.root.Reflect.compare(haxe.lang.Runtime.toString(a), haxe.lang.Runtime.toString(b))) )) );
				}
				else
				{
					//line 51 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\common\\ClassResult.hx"
					return ((double) (((int) (haxe.root.Reflect.compare(((java.lang.Object) (as.errors) ), ((java.lang.Object) (bs.errors) ))) )) );
				}
				
			}
			
		}
		else
		{
			//line 52 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\common\\ClassResult.hx"
			if (bs.hasErrors) 
			{
				//line 53 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\common\\ClassResult.hx"
				return ((double) (1) );
			}
			else
			{
				//line 54 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\common\\ClassResult.hx"
				if (as.hasFailures) 
				{
					//line 55 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\common\\ClassResult.hx"
					if ( ! (bs.hasFailures) ) 
					{
						//line 55 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\common\\ClassResult.hx"
						return ((double) (-1) );
					}
					else
					{
						//line 55 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\common\\ClassResult.hx"
						if (( as.failures == bs.failures )) 
						{
							//line 55 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\common\\ClassResult.hx"
							return ((double) (((int) (haxe.root.Reflect.compare(haxe.lang.Runtime.toString(a), haxe.lang.Runtime.toString(b))) )) );
						}
						else
						{
							//line 55 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\common\\ClassResult.hx"
							return ((double) (((int) (haxe.root.Reflect.compare(((java.lang.Object) (as.failures) ), ((java.lang.Object) (bs.failures) ))) )) );
						}
						
					}
					
				}
				else
				{
					//line 56 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\common\\ClassResult.hx"
					if (bs.hasFailures) 
					{
						//line 57 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\common\\ClassResult.hx"
						return ((double) (1) );
					}
					else
					{
						//line 58 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\common\\ClassResult.hx"
						if (as.hasWarnings) 
						{
							//line 59 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\common\\ClassResult.hx"
							if ( ! (bs.hasWarnings) ) 
							{
								//line 59 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\common\\ClassResult.hx"
								return ((double) (-1) );
							}
							else
							{
								//line 59 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\common\\ClassResult.hx"
								if (( as.warnings == bs.warnings )) 
								{
									//line 59 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\common\\ClassResult.hx"
									return ((double) (((int) (haxe.root.Reflect.compare(haxe.lang.Runtime.toString(a), haxe.lang.Runtime.toString(b))) )) );
								}
								else
								{
									//line 59 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\common\\ClassResult.hx"
									return ((double) (((int) (haxe.root.Reflect.compare(((java.lang.Object) (as.warnings) ), ((java.lang.Object) (bs.warnings) ))) )) );
								}
								
							}
							
						}
						else
						{
							//line 60 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\common\\ClassResult.hx"
							if (bs.hasWarnings) 
							{
								//line 61 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\common\\ClassResult.hx"
								return ((double) (1) );
							}
							else
							{
								//line 63 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\common\\ClassResult.hx"
								return ((double) (((int) (haxe.root.Reflect.compare(haxe.lang.Runtime.toString(a), haxe.lang.Runtime.toString(b))) )) );
							}
							
						}
						
					}
					
				}
				
			}
			
		}
		
	}
	
	
	public utest.ui.common.ClassResult me;
	
}


