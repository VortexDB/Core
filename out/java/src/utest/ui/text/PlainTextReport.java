// Generated by Haxe 4.0.0-preview.4+1e3e5e016
package utest.ui.text;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class PlainTextReport extends haxe.lang.HxObject implements utest.ui.common.IReport<utest.ui.text.PlainTextReport>
{
	public PlainTextReport(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public PlainTextReport(utest.Runner runner, haxe.lang.Function outputHandler)
	{
		//line 20 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		utest.ui.text.PlainTextReport.__hx_ctor_utest_ui_text_PlainTextReport(this, runner, outputHandler);
	}
	
	
	protected static void __hx_ctor_utest_ui_text_PlainTextReport(utest.ui.text.PlainTextReport __hx_this, utest.Runner runner, haxe.lang.Function outputHandler)
	{
		//line 21 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		__hx_this.aggregator = new utest.ui.common.ResultAggregator(runner, true);
		//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		runner.onStart.add(((haxe.lang.Function) (new haxe.lang.Closure(__hx_this, "start")) ));
		//line 23 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		__hx_this.aggregator.onComplete.add(((haxe.lang.Function) (new haxe.lang.Closure(__hx_this, "complete")) ));
		//line 24 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		if (( null != outputHandler )) 
		{
			//line 25 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
			__hx_this.setHandler(outputHandler);
		}
		
		//line 26 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		__hx_this.displaySuccessResults = utest.ui.common.SuccessResultsDisplayMode.AlwaysShowSuccessResults;
		//line 27 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		__hx_this.displayHeader = utest.ui.common.HeaderDisplayMode.AlwaysShowHeader;
	}
	
	
	public utest.ui.common.SuccessResultsDisplayMode displaySuccessResults;
	
	public utest.ui.common.HeaderDisplayMode displayHeader;
	
	public haxe.lang.Function handler;
	
	public utest.ui.common.ResultAggregator aggregator;
	
	public java.lang.String newline;
	
	public java.lang.String indent;
	
	public void setHandler(haxe.lang.Function handler)
	{
		//line 31 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		this.handler = handler;
	}
	
	
	public double startTime;
	
	public void start(utest.Runner e)
	{
		//line 35 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		this.startTime = this.getTime();
	}
	
	
	public double getTime()
	{
		//line 40 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		return ( ((double) (haxe.root.Date.now().date.getTime()) ) / 1000 );
	}
	
	
	public java.lang.String indents(int c)
	{
		//line 48 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		java.lang.String s = "";
		//line 49 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		while ((  -- c >= 0 ))
		{
			//line 50 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
			s += this.indent;
		}
		
		//line 51 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		return s;
	}
	
	
	public java.lang.String dumpStack(haxe.root.Array<haxe.StackItem> stack)
	{
		//line 55 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		if (( stack.length == 0 )) 
		{
			//line 56 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
			return "";
		}
		
		//line 57 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		haxe.root.Array<java.lang.String> parts = haxe.lang.StringExt.split(haxe.CallStack.toString(stack), "\n");
		//line 57 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		haxe.root.Array<java.lang.String> r = new haxe.root.Array<java.lang.String>(new java.lang.String[]{});
		//line 59 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		{
			//line 59 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
			int _g = 0;
			//line 59 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
			while (( _g < parts.length ))
			{
				//line 59 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
				java.lang.String part = parts.__get(_g);
				//line 59 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
				 ++ _g;
				//line 60 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
				if (( haxe.lang.StringExt.indexOf(part, " utest.", null) >= 0 )) 
				{
					//line 60 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					continue;
				}
				
				//line 61 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
				r.push(part);
			}
			
		}
		
		//line 63 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		return r.join(this.newline);
	}
	
	
	public void addHeader(haxe.root.StringBuf buf, utest.ui.common.PackageResult result)
	{
		//line 67 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		if ( ! (utest.ui.common.ReportTools.hasHeader(((utest.ui.common.IReport) (this) ), result.stats)) ) 
		{
			//line 68 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
			return ;
		}
		
		//line 70 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		double end = this.getTime();
		//line 74 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		double time = ( ((double) (((int) (( (( end - this.startTime )) * 1000 )) )) ) / 1000 );
		//line 77 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		buf.add(haxe.lang.Runtime.toString(( ( "\nassertations: " + result.stats.assertations ) + this.newline )));
		//line 78 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		buf.add(haxe.lang.Runtime.toString(( ( "successes: " + result.stats.successes ) + this.newline )));
		//line 79 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		buf.add(haxe.lang.Runtime.toString(( ( "errors: " + result.stats.errors ) + this.newline )));
		//line 80 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		buf.add(haxe.lang.Runtime.toString(( ( "failures: " + result.stats.failures ) + this.newline )));
		//line 81 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		buf.add(haxe.lang.Runtime.toString(( ( "warnings: " + result.stats.warnings ) + this.newline )));
		//line 82 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		buf.add(haxe.lang.Runtime.toString(( ( "execution time: " + haxe.lang.Runtime.toString(time) ) + this.newline )));
		//line 86 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		buf.add(haxe.lang.Runtime.toString(this.newline));
		//line 87 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		buf.add(haxe.lang.Runtime.toString(( "results: " + (( (result.stats.isOk) ? ("ALL TESTS OK (success: true)") : ("SOME TESTS FAILURES (success: false)") )) )));
		//line 88 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		buf.add(haxe.lang.Runtime.toString(this.newline));
	}
	
	
	public utest.ui.common.PackageResult result;
	
	public java.lang.String getResults()
	{
		//line 93 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		haxe.root.StringBuf buf = new haxe.root.StringBuf();
		//line 94 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		this.addHeader(buf, this.result);
		//line 96 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		{
			//line 96 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
			int _g = 0;
			//line 96 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
			haxe.root.Array<java.lang.String> _g1 = this.result.packageNames(null);
			//line 96 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
			while (( _g < _g1.length ))
			{
				//line 96 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
				java.lang.String pname = _g1.__get(_g);
				//line 96 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
				 ++ _g;
				//line 97 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
				utest.ui.common.PackageResult pack = this.result.getPackage(pname);
				//line 98 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
				if (utest.ui.common.ReportTools.skipResult(((utest.ui.common.IReport) (this) ), pack.stats, this.result.stats.isOk)) 
				{
					//line 98 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					continue;
				}
				
				//line 99 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
				{
					//line 99 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					int _g2 = 0;
					//line 99 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					haxe.root.Array<java.lang.String> _g3 = pack.classNames(null);
					//line 99 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					while (( _g2 < _g3.length ))
					{
						//line 99 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						java.lang.String cname = _g3.__get(_g2);
						//line 99 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						 ++ _g2;
						//line 100 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						utest.ui.common.ClassResult cls = pack.getClass(cname);
						//line 101 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						if (utest.ui.common.ReportTools.skipResult(((utest.ui.common.IReport) (this) ), cls.stats, this.result.stats.isOk)) 
						{
							//line 101 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
							continue;
						}
						
						//line 102 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						buf.add(haxe.lang.Runtime.toString(( ( (( (haxe.lang.Runtime.valEq(pname, "")) ? ("") : (( pname + "." )) )) + cname ) + this.newline )));
						//line 103 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						{
							//line 103 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
							int _g4 = 0;
							//line 103 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
							haxe.root.Array<java.lang.String> _g5 = cls.methodNames(null);
							//line 103 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
							while (( _g4 < _g5.length ))
							{
								//line 103 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
								java.lang.String mname = _g5.__get(_g4);
								//line 103 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
								 ++ _g4;
								//line 104 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
								utest.ui.common.FixtureResult fix = cls.get(mname);
								//line 105 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
								if (utest.ui.common.ReportTools.skipResult(((utest.ui.common.IReport) (this) ), fix.stats, this.result.stats.isOk)) 
								{
									//line 105 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
									continue;
								}
								
								//line 106 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
								buf.add(haxe.lang.Runtime.toString(( ( this.indents(1) + mname ) + ": " )));
								//line 107 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
								if (fix.stats.isOk) 
								{
									//line 108 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
									buf.add(haxe.lang.Runtime.toString("OK "));
								}
								else
								{
									//line 109 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
									if (fix.stats.hasErrors) 
									{
										//line 110 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
										buf.add(haxe.lang.Runtime.toString("ERROR "));
									}
									else
									{
										//line 111 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
										if (fix.stats.hasFailures) 
										{
											//line 112 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
											buf.add(haxe.lang.Runtime.toString("FAILURE "));
										}
										else
										{
											//line 113 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
											if (fix.stats.hasWarnings) 
											{
												//line 114 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
												buf.add(haxe.lang.Runtime.toString("WARNING "));
											}
											
										}
										
									}
									
								}
								
								//line 116 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
								java.lang.String messages = "";
								//line 117 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
								{
									//line 117 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
									haxe.ds._List.ListIterator<utest.Assertation> _g6 = fix.iterator();
									//line 117 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
									while (( _g6.head != null ))
									{
										//line 117 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
										utest.Assertation val = _g6.head.item;
										//line 117 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
										_g6.head = _g6.head.next;
										//line 118 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
										switch (val.index)
										{
											case 0:
											{
												//line 120 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
												buf.add(haxe.lang.Runtime.toString("."));
												//line 120 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
												break;
											}
											
											
											case 1:
											{
												//line 121 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
												java.lang.Object pos = val.params[1];
												//line 121 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
												java.lang.String msg = haxe.lang.Runtime.toString(val.params[0]);
												//line 121 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
												{
													//line 122 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
													buf.add(haxe.lang.Runtime.toString("F"));
													//line 123 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
													messages += ( ( ( ( ( this.indents(2) + "line: " ) + ((int) (haxe.lang.Runtime.getField_f(pos, "lineNumber", true)) ) ) + ", " ) + msg ) + this.newline );
												}
												
												//line 121 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
												break;
											}
											
											
											case 2:
											{
												//line 124 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
												haxe.root.Array<haxe.StackItem> s = ((haxe.root.Array<haxe.StackItem>) (val.params[1]) );
												//line 124 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
												java.lang.Object e = val.params[0];
												//line 124 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
												{
													//line 125 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
													buf.add(haxe.lang.Runtime.toString("E"));
													//line 126 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
													messages += ( ( ( this.indents(2) + haxe.root.Std.string(e) ) + this.dumpStack(s) ) + this.newline );
												}
												
												//line 124 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
												break;
											}
											
											
											case 3:
											{
												//line 127 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
												haxe.root.Array<haxe.StackItem> s1 = ((haxe.root.Array<haxe.StackItem>) (val.params[1]) );
												//line 127 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
												java.lang.Object e1 = val.params[0];
												//line 127 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
												{
													//line 128 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
													buf.add(haxe.lang.Runtime.toString("S"));
													//line 129 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
													messages += ( ( ( this.indents(2) + haxe.root.Std.string(e1) ) + this.dumpStack(s1) ) + this.newline );
												}
												
												//line 127 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
												break;
											}
											
											
											case 4:
											{
												//line 130 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
												haxe.root.Array<haxe.StackItem> s2 = ((haxe.root.Array<haxe.StackItem>) (val.params[1]) );
												//line 130 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
												java.lang.Object e2 = val.params[0];
												//line 130 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
												{
													//line 131 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
													buf.add(haxe.lang.Runtime.toString("T"));
													//line 132 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
													messages += ( ( ( this.indents(2) + haxe.root.Std.string(e2) ) + this.dumpStack(s2) ) + this.newline );
												}
												
												//line 130 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
												break;
											}
											
											
											case 5:
											{
												//line 133 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
												haxe.root.Array<haxe.StackItem> s3 = ((haxe.root.Array<haxe.StackItem>) (val.params[1]) );
												//line 133 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
												int missedAsyncs = ((int) (haxe.lang.Runtime.toInt(val.params[0])) );
												//line 133 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
												{
													//line 134 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
													buf.add(haxe.lang.Runtime.toString("O"));
													//line 135 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
													messages += ( ( ( ( this.indents(2) + "missed async calls: " ) + missedAsyncs ) + this.dumpStack(s3) ) + this.newline );
												}
												
												//line 133 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
												break;
											}
											
											
											case 6:
											{
												//line 136 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
												haxe.root.Array<haxe.StackItem> s4 = ((haxe.root.Array<haxe.StackItem>) (val.params[1]) );
												//line 136 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
												java.lang.Object e3 = val.params[0];
												//line 136 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
												{
													//line 137 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
													buf.add(haxe.lang.Runtime.toString("A"));
													//line 138 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
													messages += ( ( ( this.indents(2) + haxe.root.Std.string(e3) ) + this.dumpStack(s4) ) + this.newline );
												}
												
												//line 136 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
												break;
											}
											
											
											case 7:
											{
												//line 139 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
												java.lang.String msg1 = haxe.lang.Runtime.toString(val.params[0]);
												//line 139 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
												{
													//line 140 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
													buf.add(haxe.lang.Runtime.toString("W"));
													//line 141 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
													messages += ( ( this.indents(2) + msg1 ) + this.newline );
												}
												
												//line 139 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
												break;
											}
											
											
											case 8:
											{
												//line 142 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
												java.lang.String reason = haxe.lang.Runtime.toString(val.params[0]);
												//line 142 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
												{
													//line 143 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
													buf.add(haxe.lang.Runtime.toString("I"));
													//line 144 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
													if (( ( reason != null ) &&  ! (haxe.lang.Runtime.valEq(reason, ""))  )) 
													{
														//line 145 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
														messages += ( ( this.indents(2) + (( "With reason: " + reason )) ) + this.newline );
													}
													
												}
												
												//line 142 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
												break;
											}
											
											
										}
										
									}
									
								}
								
								//line 149 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
								buf.add(haxe.lang.Runtime.toString(this.newline));
								//line 150 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
								buf.add(haxe.lang.Runtime.toString(messages));
							}
							
						}
						
					}
					
				}
				
			}
			
		}
		
		//line 154 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		return buf.toString();
	}
	
	
	public void complete(utest.ui.common.PackageResult result)
	{
		//line 158 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		this.result = result;
		//line 159 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		if (( this.handler != null )) 
		{
			//line 159 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
			this.handler.__hx_invoke1_o(0.0, this);
		}
		
		//line 161 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		haxe.root.Sys.exit(( (result.stats.isOk) ? (0) : (1) ));
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		{
			//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
			boolean __temp_executeDef1 = true;
			//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
			switch (field.hashCode())
			{
				case -2129294769:
				{
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					if (field.equals("startTime")) 
					{
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						__temp_executeDef1 = false;
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						this.startTime = ((double) (value) );
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						return value;
					}
					
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					break;
				}
				
				
			}
			
			//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
			if (__temp_executeDef1) 
			{
				//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		{
			//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
			boolean __temp_executeDef1 = true;
			//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
			switch (field.hashCode())
			{
				case -934426595:
				{
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					if (field.equals("result")) 
					{
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						__temp_executeDef1 = false;
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						this.result = ((utest.ui.common.PackageResult) (value) );
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						return value;
					}
					
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					break;
				}
				
				
				case 1586660309:
				{
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					if (field.equals("displaySuccessResults")) 
					{
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						__temp_executeDef1 = false;
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						this.displaySuccessResults = ((utest.ui.common.SuccessResultsDisplayMode) (value) );
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						return value;
					}
					
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					break;
				}
				
				
				case -2129294769:
				{
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					if (field.equals("startTime")) 
					{
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						__temp_executeDef1 = false;
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						this.startTime = ((double) (haxe.lang.Runtime.toDouble(value)) );
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						return value;
					}
					
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					break;
				}
				
				
				case -2138714641:
				{
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					if (field.equals("displayHeader")) 
					{
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						__temp_executeDef1 = false;
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						this.displayHeader = ((utest.ui.common.HeaderDisplayMode) (value) );
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						return value;
					}
					
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					break;
				}
				
				
				case -1184239444:
				{
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					if (field.equals("indent")) 
					{
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						__temp_executeDef1 = false;
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						this.indent = haxe.lang.Runtime.toString(value);
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						return value;
					}
					
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					break;
				}
				
				
				case 692803402:
				{
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					if (field.equals("handler")) 
					{
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						__temp_executeDef1 = false;
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						this.handler = ((haxe.lang.Function) (value) );
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						return value;
					}
					
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					break;
				}
				
				
				case 1845922196:
				{
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					if (field.equals("newline")) 
					{
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						__temp_executeDef1 = false;
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						this.newline = haxe.lang.Runtime.toString(value);
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						return value;
					}
					
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					break;
				}
				
				
				case 1135524809:
				{
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					if (field.equals("aggregator")) 
					{
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						__temp_executeDef1 = false;
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						this.aggregator = ((utest.ui.common.ResultAggregator) (value) );
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						return value;
					}
					
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					break;
				}
				
				
			}
			
			//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
			if (__temp_executeDef1) 
			{
				//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		{
			//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
			boolean __temp_executeDef1 = true;
			//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
			switch (field.hashCode())
			{
				case -599445191:
				{
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					if (field.equals("complete")) 
					{
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						__temp_executeDef1 = false;
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "complete")) );
					}
					
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					break;
				}
				
				
				case 1586660309:
				{
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					if (field.equals("displaySuccessResults")) 
					{
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						__temp_executeDef1 = false;
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						return this.displaySuccessResults;
					}
					
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					break;
				}
				
				
				case 2134407104:
				{
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					if (field.equals("getResults")) 
					{
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						__temp_executeDef1 = false;
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "getResults")) );
					}
					
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					break;
				}
				
				
				case -2138714641:
				{
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					if (field.equals("displayHeader")) 
					{
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						__temp_executeDef1 = false;
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						return this.displayHeader;
					}
					
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					break;
				}
				
				
				case -934426595:
				{
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					if (field.equals("result")) 
					{
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						__temp_executeDef1 = false;
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						return this.result;
					}
					
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					break;
				}
				
				
				case 692803402:
				{
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					if (field.equals("handler")) 
					{
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						__temp_executeDef1 = false;
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						return this.handler;
					}
					
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					break;
				}
				
				
				case -328430962:
				{
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					if (field.equals("addHeader")) 
					{
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						__temp_executeDef1 = false;
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "addHeader")) );
					}
					
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					break;
				}
				
				
				case 1135524809:
				{
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					if (field.equals("aggregator")) 
					{
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						__temp_executeDef1 = false;
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						return this.aggregator;
					}
					
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					break;
				}
				
				
				case -1366118156:
				{
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					if (field.equals("dumpStack")) 
					{
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						__temp_executeDef1 = false;
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "dumpStack")) );
					}
					
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					break;
				}
				
				
				case 1845922196:
				{
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					if (field.equals("newline")) 
					{
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						__temp_executeDef1 = false;
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						return this.newline;
					}
					
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					break;
				}
				
				
				case 1943283015:
				{
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					if (field.equals("indents")) 
					{
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						__temp_executeDef1 = false;
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "indents")) );
					}
					
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					break;
				}
				
				
				case -1184239444:
				{
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					if (field.equals("indent")) 
					{
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						__temp_executeDef1 = false;
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						return this.indent;
					}
					
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					break;
				}
				
				
				case -75121853:
				{
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					if (field.equals("getTime")) 
					{
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						__temp_executeDef1 = false;
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "getTime")) );
					}
					
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					break;
				}
				
				
				case -628498296:
				{
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					if (field.equals("setHandler")) 
					{
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						__temp_executeDef1 = false;
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "setHandler")) );
					}
					
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					break;
				}
				
				
				case 109757538:
				{
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					if (field.equals("start")) 
					{
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						__temp_executeDef1 = false;
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "start")) );
					}
					
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					break;
				}
				
				
				case -2129294769:
				{
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					if (field.equals("startTime")) 
					{
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						__temp_executeDef1 = false;
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						return this.startTime;
					}
					
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					break;
				}
				
				
			}
			
			//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
			if (__temp_executeDef1) 
			{
				//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		{
			//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
			boolean __temp_executeDef1 = true;
			//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
			switch (field.hashCode())
			{
				case -2129294769:
				{
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					if (field.equals("startTime")) 
					{
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						__temp_executeDef1 = false;
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						return this.startTime;
					}
					
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					break;
				}
				
				
			}
			
			//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
			if (__temp_executeDef1) 
			{
				//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, java.lang.Object[] dynargs)
	{
		//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		{
			//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
			boolean __temp_executeDef1 = true;
			//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
			switch (field.hashCode())
			{
				case -599445191:
				{
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					if (field.equals("complete")) 
					{
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						__temp_executeDef1 = false;
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						this.complete(((utest.ui.common.PackageResult) (dynargs[0]) ));
					}
					
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					break;
				}
				
				
				case -628498296:
				{
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					if (field.equals("setHandler")) 
					{
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						__temp_executeDef1 = false;
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						this.setHandler(((haxe.lang.Function) (dynargs[0]) ));
					}
					
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					break;
				}
				
				
				case 2134407104:
				{
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					if (field.equals("getResults")) 
					{
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						__temp_executeDef1 = false;
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						return this.getResults();
					}
					
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					break;
				}
				
				
				case 109757538:
				{
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					if (field.equals("start")) 
					{
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						__temp_executeDef1 = false;
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						this.start(((utest.Runner) (dynargs[0]) ));
					}
					
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					break;
				}
				
				
				case -328430962:
				{
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					if (field.equals("addHeader")) 
					{
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						__temp_executeDef1 = false;
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						this.addHeader(((haxe.root.StringBuf) (dynargs[0]) ), ((utest.ui.common.PackageResult) (dynargs[1]) ));
					}
					
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					break;
				}
				
				
				case -75121853:
				{
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					if (field.equals("getTime")) 
					{
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						__temp_executeDef1 = false;
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						return this.getTime();
					}
					
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					break;
				}
				
				
				case -1366118156:
				{
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					if (field.equals("dumpStack")) 
					{
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						__temp_executeDef1 = false;
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						return this.dumpStack(((haxe.root.Array<haxe.StackItem>) (dynargs[0]) ));
					}
					
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					break;
				}
				
				
				case 1943283015:
				{
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					if (field.equals("indents")) 
					{
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						__temp_executeDef1 = false;
						//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
						return this.indents(((int) (haxe.lang.Runtime.toInt(dynargs[0])) ));
					}
					
					//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
					break;
				}
				
				
			}
			
			//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
			if (__temp_executeDef1) 
			{
				//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		baseArr.push("result");
		//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		baseArr.push("startTime");
		//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		baseArr.push("indent");
		//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		baseArr.push("newline");
		//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		baseArr.push("aggregator");
		//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		baseArr.push("handler");
		//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		baseArr.push("displayHeader");
		//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		baseArr.push("displaySuccessResults");
		//line 12 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\ui\\text\\PlainTextReport.hx"
		super.__hx_getFields(baseArr);
	}
	
	
}


