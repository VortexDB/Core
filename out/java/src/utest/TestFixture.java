// Generated by Haxe 4.0.0-preview.4+1e3e5e016
package utest;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TestFixture extends haxe.lang.HxObject
{
	public TestFixture(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public TestFixture(java.lang.Object target, java.lang.String method, java.lang.String setup, java.lang.String teardown, java.lang.String setupAsync, java.lang.String teardownAsync)
	{
		//line 15 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
		utest.TestFixture.__hx_ctor_utest_TestFixture(this, target, method, setup, teardown, setupAsync, teardownAsync);
	}
	
	
	protected static void __hx_ctor_utest_TestFixture(utest.TestFixture __hx_this, java.lang.Object target, java.lang.String method, java.lang.String setup, java.lang.String teardown, java.lang.String setupAsync, java.lang.String teardownAsync)
	{
		//line 16 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
		__hx_this.target = target;
		//line 17 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
		__hx_this.method = method;
		//line 18 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
		__hx_this.setup = setup;
		//line 19 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
		__hx_this.setupAsync = setupAsync;
		//line 20 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
		__hx_this.teardown = teardown;
		//line 21 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
		__hx_this.teardownAsync = teardownAsync;
		//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
		__hx_this.ignoringInfo = __hx_this.getIgnored();
	}
	
	
	public java.lang.Object target;
	
	public java.lang.String method;
	
	public java.lang.String setup;
	
	public java.lang.String setupAsync;
	
	public java.lang.String teardown;
	
	public java.lang.String teardownAsync;
	
	public java.lang.String ignoringInfo;
	
	public void checkMethod(java.lang.String name, java.lang.String arg)
	{
		//line 26 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
		java.lang.Object field = haxe.root.Reflect.field(this.target, name);
		//line 27 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
		if (( field == null )) 
		{
			//line 27 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
			throw haxe.lang.HaxeException.wrap(( ( ( arg + " function " ) + name ) + " is not a field of target" ));
		}
		
		//line 28 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
		if ( ! (haxe.root.Reflect.isFunction(field)) ) 
		{
			//line 28 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
			throw haxe.lang.HaxeException.wrap(( ( ( arg + " function " ) + name ) + " is not a function" ));
		}
		
	}
	
	
	public java.lang.String getIgnored()
	{
		//line 32 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
		java.lang.Object metas = haxe.rtti.Meta.getFields(((java.lang.Class) (haxe.root.Type.getClass(((java.lang.Object) (this.target) ))) ));
		//line 33 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
		java.lang.Object metasForTestMetas = haxe.root.Reflect.getProperty(metas, this.method);
		//line 35 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
		if (( ( metasForTestMetas == null ) ||  ! (haxe.root.Reflect.hasField(metasForTestMetas, "Ignored"))  )) 
		{
			//line 36 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
			return utest._IgnoredFixture.IgnoredFixture_Impl_.NotIgnored();
		}
		
		//line 39 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
		haxe.root.Array ignoredArgs = ((haxe.root.Array) (haxe.root.Reflect.getProperty(metasForTestMetas, "Ignored")) );
		//line 40 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
		if (( ( ( ignoredArgs == null ) || ( ignoredArgs.length == 0 ) ) || ( ignoredArgs.__get(0) == null ) )) 
		{
			//line 41 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
			return utest._IgnoredFixture.IgnoredFixture_Impl_.Ignored(null);
		}
		
		//line 44 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
		java.lang.String ignoredReason = haxe.root.Std.string(ignoredArgs.__get(0));
		//line 45 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
		return utest._IgnoredFixture.IgnoredFixture_Impl_.Ignored(ignoredReason);
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
		{
			//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
			switch (field.hashCode())
			{
				case -880905839:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
					if (field.equals("target")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						this.target = ((java.lang.Object) (value) );
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						return value;
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
					break;
				}
				
				
			}
			
			//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
		{
			//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
			switch (field.hashCode())
			{
				case 122890077:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
					if (field.equals("ignoringInfo")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						this.ignoringInfo = haxe.lang.Runtime.toString(value);
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						return value;
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
					break;
				}
				
				
				case -880905839:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
					if (field.equals("target")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						this.target = ((java.lang.Object) (value) );
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						return value;
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
					break;
				}
				
				
				case -1682714920:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
					if (field.equals("teardownAsync")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						this.teardownAsync = haxe.lang.Runtime.toString(value);
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						return value;
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
					break;
				}
				
				
				case -1077554975:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
					if (field.equals("method")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						this.method = haxe.lang.Runtime.toString(value);
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						return value;
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
					break;
				}
				
				
				case -1663474172:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
					if (field.equals("teardown")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						this.teardown = haxe.lang.Runtime.toString(value);
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						return value;
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
					break;
				}
				
				
				case 109329021:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
					if (field.equals("setup")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						this.setup = haxe.lang.Runtime.toString(value);
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						return value;
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
					break;
				}
				
				
				case 1042800127:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
					if (field.equals("setupAsync")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						this.setupAsync = haxe.lang.Runtime.toString(value);
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						return value;
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
					break;
				}
				
				
			}
			
			//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
		{
			//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
			switch (field.hashCode())
			{
				case -1505691492:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
					if (field.equals("getIgnored")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "getIgnored")) );
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
					break;
				}
				
				
				case -880905839:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
					if (field.equals("target")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						return this.target;
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
					break;
				}
				
				
				case 583056393:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
					if (field.equals("checkMethod")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "checkMethod")) );
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
					break;
				}
				
				
				case -1077554975:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
					if (field.equals("method")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						return this.method;
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
					break;
				}
				
				
				case 122890077:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
					if (field.equals("ignoringInfo")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						return this.ignoringInfo;
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
					break;
				}
				
				
				case 109329021:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
					if (field.equals("setup")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						return this.setup;
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
					break;
				}
				
				
				case -1682714920:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
					if (field.equals("teardownAsync")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						return this.teardownAsync;
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
					break;
				}
				
				
				case 1042800127:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
					if (field.equals("setupAsync")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						return this.setupAsync;
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
					break;
				}
				
				
				case -1663474172:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
					if (field.equals("teardown")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						return this.teardown;
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
					break;
				}
				
				
			}
			
			//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
		{
			//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
			switch (field.hashCode())
			{
				case -880905839:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
					if (field.equals("target")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						return ((double) (haxe.lang.Runtime.toDouble(this.target)) );
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
					break;
				}
				
				
			}
			
			//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, java.lang.Object[] dynargs)
	{
		//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
		{
			//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
			boolean __temp_executeDef1 = true;
			//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
			switch (field.hashCode())
			{
				case -1505691492:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
					if (field.equals("getIgnored")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						return this.getIgnored();
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
					break;
				}
				
				
				case 583056393:
				{
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
					if (field.equals("checkMethod")) 
					{
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						__temp_executeDef1 = false;
						//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
						this.checkMethod(haxe.lang.Runtime.toString(dynargs[0]), haxe.lang.Runtime.toString(dynargs[1]));
					}
					
					//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
					break;
				}
				
				
			}
			
			//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
			if (__temp_executeDef1) 
			{
				//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
		baseArr.push("ignoringInfo");
		//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
		baseArr.push("teardownAsync");
		//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
		baseArr.push("teardown");
		//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
		baseArr.push("setupAsync");
		//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
		baseArr.push("setup");
		//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
		baseArr.push("method");
		//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
		baseArr.push("target");
		//line 6 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\TestFixture.hx"
		super.__hx_getFields(baseArr);
	}
	
	
}


