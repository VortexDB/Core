// Generated by Haxe 4.0.0-preview.4+1e3e5e016
package utest;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Runner extends haxe.lang.HxObject
{
	public Runner(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Runner()
	{
		//line 71 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		utest.Runner.__hx_ctor_utest_Runner(this);
	}
	
	
	protected static void __hx_ctor_utest_Runner(utest.Runner __hx_this)
	{
		//line 66 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		__hx_this.globalPattern = null;
		//line 71 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		{
			//line 72 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			__hx_this.fixtures = new haxe.root.Array<utest.TestFixture>();
			//line 73 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			__hx_this.onProgress = new utest.Dispatcher<java.lang.Object>();
			//line 74 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			__hx_this.onStart = new utest.Dispatcher<utest.Runner>();
			//line 75 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			__hx_this.onComplete = new utest.Dispatcher<utest.Runner>();
			//line 76 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			__hx_this.onPrecheck = new utest.Dispatcher<utest.TestHandler<utest.TestFixture>>();
			//line 77 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			__hx_this.onTestStart = new utest.Dispatcher<utest.TestHandler<utest.TestFixture>>();
			//line 78 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			__hx_this.onTestComplete = new utest.Dispatcher<utest.TestHandler<utest.TestFixture>>();
			//line 79 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			__hx_this.length = 0;
		}
		
	}
	
	
	public haxe.root.Array<utest.TestFixture> fixtures;
	
	public utest.Dispatcher<java.lang.Object> onProgress;
	
	public utest.Dispatcher<utest.Runner> onStart;
	
	public utest.Dispatcher<utest.Runner> onComplete;
	
	public utest.Dispatcher<utest.TestHandler<utest.TestFixture>> onPrecheck;
	
	public utest.Dispatcher<utest.TestHandler<utest.TestFixture>> onTestStart;
	
	public utest.Dispatcher<utest.TestHandler<utest.TestFixture>> onTestComplete;
	
	public int length;
	
	public haxe.root.EReg globalPattern;
	
	public void addCase(java.lang.Object test, java.lang.String setup, java.lang.String teardown, java.lang.String prefix, haxe.root.EReg pattern, java.lang.String setupAsync, java.lang.String teardownAsync)
	{
		//line 93 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		if (( teardownAsync == null )) 
		{
			//line 93 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			teardownAsync = "teardownAsync";
		}
		
		//line 93 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		if (( setupAsync == null )) 
		{
			//line 93 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			setupAsync = "setupAsync";
		}
		
		//line 93 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		if (( prefix == null )) 
		{
			//line 93 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			prefix = "test";
		}
		
		//line 93 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		if (( teardown == null )) 
		{
			//line 93 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			teardown = "teardown";
		}
		
		//line 93 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		if (( setup == null )) 
		{
			//line 93 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			setup = "setup";
		}
		
		//line 94 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		if ( ! (haxe.root.Reflect.isObject(test)) ) 
		{
			//line 94 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			throw haxe.lang.HaxeException.wrap("can\'t add a null object as a test case");
		}
		
		//line 95 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		if ( ! (this.isMethod(test, setup)) ) 
		{
			//line 96 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			setup = null;
		}
		
		//line 97 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		if ( ! (this.isMethod(test, setupAsync)) ) 
		{
			//line 98 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			setupAsync = null;
		}
		
		//line 99 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		if ( ! (this.isMethod(test, teardown)) ) 
		{
			//line 100 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			teardown = null;
		}
		
		//line 101 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		if ( ! (this.isMethod(test, teardownAsync)) ) 
		{
			//line 102 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			teardownAsync = null;
		}
		
		//line 103 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		haxe.root.Array<java.lang.String> fields = haxe.root.Type.getInstanceFields(((java.lang.Class) (haxe.root.Type.getClass(((java.lang.Object) (test) ))) ));
		//line 104 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		{
			//line 104 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			int _g = 0;
			//line 104 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			while (( _g < fields.length ))
			{
				//line 104 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
				java.lang.String field = fields.__get(_g);
				//line 104 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
				 ++ _g;
				//line 105 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
				if ( ! (this.isMethod(test, field)) ) 
				{
					//line 105 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					continue;
				}
				
				//line 106 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
				if ( ! (this.isTestFixtureName(field, prefix, pattern, this.globalPattern)) ) 
				{
					//line 106 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					continue;
				}
				
				//line 107 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
				this.addFixture(new utest.TestFixture(test, field, setup, teardown, setupAsync, teardownAsync));
			}
			
		}
		
	}
	
	
	public boolean isTestFixtureName(java.lang.String name, java.lang.String prefix, haxe.root.EReg pattern, haxe.root.EReg globalPattern)
	{
		//line 159 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		if (( ( pattern == null ) && ( globalPattern == null ) )) 
		{
			//line 160 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			return name.startsWith(prefix);
		}
		
		//line 162 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		if (( pattern == null )) 
		{
			//line 162 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			pattern = globalPattern;
		}
		
		//line 163 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		return pattern.match(name);
	}
	
	
	public void addFixture(utest.TestFixture fixture)
	{
		//line 167 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		this.fixtures.push(fixture);
		//line 168 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		this.length++;
	}
	
	
	public utest.TestFixture getFixture(int index)
	{
		//line 172 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		return this.fixtures.__get(index);
	}
	
	
	public boolean isMethod(java.lang.Object test, java.lang.String name)
	{
		//line 177 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		try 
		{
			//line 177 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			return haxe.root.Reflect.isFunction(haxe.root.Reflect.field(test, name));
		}
		catch (java.lang.Throwable catchallException)
		{
			//line 176 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			haxe.lang.Exceptions.setException(catchallException);
			//line 179 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			return false;
		}
		
		
	}
	
	
	public int pos;
	
	public void run()
	{
		//line 185 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		this.pos = 0;
		//line 186 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		this.onStart.dispatch(this);
		//line 187 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		this.runNext(null);
	}
	
	
	public void runNext(utest.TestHandler<utest.TestFixture> handler)
	{
		//line 191 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		{
			//line 191 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			int _g1 = this.pos;
			//line 191 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			int _g = this.fixtures.length;
			//line 191 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			while (( _g1 < _g ))
			{
				//line 191 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
				 ++ _g1;
				//line 192 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
				utest.TestHandler<utest.TestFixture> handler1 = this.runFixture(this.fixtures.__get(this.pos++));
				//line 193 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
				if ( ! (handler1.finished) ) 
				{
					//line 194 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					handler1.onComplete.add(((haxe.lang.Function) (new haxe.lang.Closure(this, "runNext")) ));
					//line 196 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					return ;
				}
				
			}
			
		}
		
		//line 199 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		this.onComplete.dispatch(this);
	}
	
	
	public utest.TestHandler<utest.TestFixture> runFixture(utest.TestFixture fixture)
	{
		//line 204 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		utest.TestHandler<utest.TestFixture> handler = new utest.TestHandler<utest.TestFixture>(((utest.TestFixture) (fixture) ));
		//line 205 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		handler.onComplete.add(((haxe.lang.Function) (new haxe.lang.Closure(this, "testComplete")) ));
		//line 206 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		handler.onPrecheck.add(((haxe.lang.Function) (new haxe.lang.Closure(this.onPrecheck, "dispatch")) ));
		//line 207 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		this.onTestStart.dispatch(handler);
		//line 208 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		handler.execute();
		//line 209 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		return handler;
	}
	
	
	public void testComplete(utest.TestHandler<utest.TestFixture> h)
	{
		//line 213 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		this.onTestComplete.dispatch(h);
		//line 214 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		java.lang.Object __temp_stmt2 = null;
		//line 214 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		{
			//line 214 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			utest.TestResult __temp_odecl1 = utest.TestResult.ofHandler(((utest.TestHandler) (h) ));
			//line 214 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			__temp_stmt2 = new haxe.lang.DynamicObject(new java.lang.String[]{"result"}, new java.lang.Object[]{__temp_odecl1}, new java.lang.String[]{"done", "totals"}, new double[]{((double) (((double) (this.pos) )) ), ((double) (((double) (this.length) )) )});
		}
		
		//line 214 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		this.onProgress.dispatch(__temp_stmt2);
	}
	
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		{
			//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			boolean __temp_executeDef1 = true;
			//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			switch (field.hashCode())
			{
				case 111188:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("pos")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						this.pos = ((int) (value) );
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						return value;
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
				case -1106363674:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("length")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						this.length = ((int) (value) );
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						return value;
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
			}
			
			//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			if (__temp_executeDef1) 
			{
				//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		{
			//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			boolean __temp_executeDef1 = true;
			//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			switch (field.hashCode())
			{
				case 111188:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("pos")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						this.pos = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						return value;
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
				case -377141366:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("fixtures")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						this.fixtures = ((haxe.root.Array<utest.TestFixture>) (value) );
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						return value;
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
				case 2112795245:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("globalPattern")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						this.globalPattern = ((haxe.root.EReg) (value) );
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						return value;
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
				case 1768875308:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("onProgress")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						this.onProgress = ((utest.Dispatcher<java.lang.Object>) (value) );
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						return value;
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
				case -1106363674:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("length")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						this.length = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						return value;
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
				case -1336895037:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("onStart")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						this.onStart = ((utest.Dispatcher<utest.Runner>) (value) );
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						return value;
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
				case 2082190186:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("onTestComplete")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						this.onTestComplete = ((utest.Dispatcher<utest.TestHandler<utest.TestFixture>>) (value) );
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						return value;
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
				case -2124458952:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("onComplete")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						this.onComplete = ((utest.Dispatcher<utest.Runner>) (value) );
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						return value;
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
				case -1221994543:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("onTestStart")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						this.onTestStart = ((utest.Dispatcher<utest.TestHandler<utest.TestFixture>>) (value) );
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						return value;
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
				case 1478591300:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("onPrecheck")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						this.onPrecheck = ((utest.Dispatcher<utest.TestHandler<utest.TestFixture>>) (value) );
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						return value;
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
			}
			
			//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			if (__temp_executeDef1) 
			{
				//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		{
			//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			boolean __temp_executeDef1 = true;
			//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			switch (field.hashCode())
			{
				case 114894827:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("testComplete")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testComplete")) );
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
				case -377141366:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("fixtures")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						return this.fixtures;
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
				case 1605301502:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("runFixture")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "runFixture")) );
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
				case 1768875308:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("onProgress")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						return this.onProgress;
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
				case 1549827102:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("runNext")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "runNext")) );
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
				case -1336895037:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("onStart")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						return this.onStart;
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
				case 113291:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("run")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "run")) );
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
				case -2124458952:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("onComplete")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						return this.onComplete;
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
				case 111188:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("pos")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						return this.pos;
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
				case 1478591300:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("onPrecheck")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						return this.onPrecheck;
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
				case -403520853:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("isMethod")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "isMethod")) );
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
				case -1221994543:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("onTestStart")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						return this.onTestStart;
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
				case 193410515:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("getFixture")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "getFixture")) );
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
				case 2082190186:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("onTestComplete")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						return this.onTestComplete;
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
				case 1064784424:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("addFixture")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "addFixture")) );
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
				case -1106363674:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("length")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						return this.length;
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
				case 340222392:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("isTestFixtureName")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "isTestFixtureName")) );
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
				case 2112795245:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("globalPattern")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						return this.globalPattern;
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
				case -1149096079:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("addCase")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "addCase")) );
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
			}
			
			//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			if (__temp_executeDef1) 
			{
				//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		{
			//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			boolean __temp_executeDef1 = true;
			//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			switch (field.hashCode())
			{
				case 111188:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("pos")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						return ((double) (this.pos) );
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
				case -1106363674:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("length")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						return ((double) (this.length) );
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
			}
			
			//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			if (__temp_executeDef1) 
			{
				//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, java.lang.Object[] dynargs)
	{
		//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		{
			//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			boolean __temp_executeDef1 = true;
			//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			switch (field.hashCode())
			{
				case 114894827:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("testComplete")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						this.testComplete(((utest.TestHandler<utest.TestFixture>) (dynargs[0]) ));
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
				case -1149096079:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("addCase")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						this.addCase(dynargs[0], haxe.lang.Runtime.toString(dynargs[1]), haxe.lang.Runtime.toString(dynargs[2]), haxe.lang.Runtime.toString(dynargs[3]), ((haxe.root.EReg) (dynargs[4]) ), haxe.lang.Runtime.toString(dynargs[5]), haxe.lang.Runtime.toString(dynargs[6]));
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
				case 1605301502:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("runFixture")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						return this.runFixture(((utest.TestFixture) (dynargs[0]) ));
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
				case 340222392:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("isTestFixtureName")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						return this.isTestFixtureName(haxe.lang.Runtime.toString(dynargs[0]), haxe.lang.Runtime.toString(dynargs[1]), ((haxe.root.EReg) (dynargs[2]) ), ((haxe.root.EReg) (dynargs[3]) ));
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
				case 1549827102:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("runNext")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						this.runNext(((utest.TestHandler<utest.TestFixture>) (dynargs[0]) ));
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
				case 1064784424:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("addFixture")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						this.addFixture(((utest.TestFixture) (dynargs[0]) ));
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
				case 113291:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("run")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						this.run();
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
				case 193410515:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("getFixture")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						return this.getFixture(((int) (haxe.lang.Runtime.toInt(dynargs[0])) ));
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
				case -403520853:
				{
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					if (field.equals("isMethod")) 
					{
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						__temp_executeDef1 = false;
						//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
						return this.isMethod(dynargs[0], haxe.lang.Runtime.toString(dynargs[1]));
					}
					
					//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
					break;
				}
				
				
			}
			
			//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
			if (__temp_executeDef1) 
			{
				//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		baseArr.push("pos");
		//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		baseArr.push("globalPattern");
		//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		baseArr.push("length");
		//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		baseArr.push("onTestComplete");
		//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		baseArr.push("onTestStart");
		//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		baseArr.push("onPrecheck");
		//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		baseArr.push("onComplete");
		//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		baseArr.push("onStart");
		//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		baseArr.push("onProgress");
		//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		baseArr.push("fixtures");
		//line 22 "C:\\Users\\VEgorov\\haxelib\\utest\\1,8,4\\src\\utest\\Runner.hx"
		super.__hx_getFields(baseArr);
	}
	
	
}


