// Generated by Haxe 4.0.0-preview.4+1e3e5e016
package test;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TimeSpanCase extends haxe.lang.HxObject
{
	public TimeSpanCase(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public TimeSpanCase()
	{
		//line 13 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
		test.TimeSpanCase.__hx_ctor_test_TimeSpanCase(this);
	}
	
	
	protected static void __hx_ctor_test_TimeSpanCase(test.TimeSpanCase __hx_this)
	{
	}
	
	
	public void testTotalSeconds()
	{
		//line 19 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
		core.time.__TimeSpan timespan = core.time._TimeSpan.TimeSpan_Impl_._new(new haxe.lang.DynamicObject(new java.lang.String[]{}, new java.lang.Object[]{}, new java.lang.String[]{"days", "hours", "minutes", "seconds"}, new double[]{((double) (((double) (1) )) ), ((double) (((double) (3) )) ), ((double) (((double) (33) )) ), ((double) (((double) (42) )) )}));
		//line 25 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
		utest.Assert.equals(99222, timespan.get_totalSeconds(), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TimeSpanCase", "test/TimeSpanCase.hx", "testTotalSeconds"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (25) )) )}));
	}
	
	
	public void testTotalHours()
	{
		//line 32 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
		core.time.__TimeSpan timespan = core.time._TimeSpan.TimeSpan_Impl_._new(new haxe.lang.DynamicObject(new java.lang.String[]{}, new java.lang.Object[]{}, new java.lang.String[]{"days", "hours"}, new double[]{((double) (((double) (1) )) ), ((double) (((double) (3) )) )}));
		//line 36 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
		utest.Assert.equals(27, timespan.get_totalHours(), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TimeSpanCase", "test/TimeSpanCase.hx", "testTotalHours"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (36) )) )}));
	}
	
	
	public void testTotalDays()
	{
		//line 43 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
		core.time.__TimeSpan timespan = core.time._TimeSpan.TimeSpan_Impl_._new(new haxe.lang.DynamicObject(new java.lang.String[]{}, new java.lang.Object[]{}, new java.lang.String[]{"days", "hours"}, new double[]{((double) (((double) (4) )) ), ((double) (((double) (48) )) )}));
		//line 47 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
		utest.Assert.equals(6, timespan.get_totalDays(), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TimeSpanCase", "test/TimeSpanCase.hx", "testTotalDays"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (47) )) )}));
	}
	
	
	public void testMakeEmpty()
	{
		//line 54 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
		core.time.__TimeSpan timespan = core.time._TimeSpan.TimeSpan_Impl_._new(new haxe.lang.DynamicObject(new java.lang.String[]{}, new java.lang.Object[]{}, new java.lang.String[]{}, new double[]{}));
		//line 55 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
		utest.Assert.equals(0, timespan.get_totalSeconds(), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TimeSpanCase", "test/TimeSpanCase.hx", "testMakeEmpty"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (55) )) )}));
	}
	
	
	public void testAddSpan()
	{
		//line 62 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
		core.time.__TimeSpan timespan1 = core.time._TimeSpan.TimeSpan_Impl_._new(new haxe.lang.DynamicObject(new java.lang.String[]{}, new java.lang.Object[]{}, new java.lang.String[]{"days"}, new double[]{((double) (((double) (3) )) )}));
		//line 65 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
		core.time.__TimeSpan timespan2 = core.time._TimeSpan.TimeSpan_Impl_._new(new haxe.lang.DynamicObject(new java.lang.String[]{}, new java.lang.Object[]{}, new java.lang.String[]{"hours"}, new double[]{((double) (((double) (5) )) )}));
		//line 68 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
		long x = timespan1.seconds;
		//line 68 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
		if (( haxe.lang.Runtime.toBool(((java.lang.Boolean) (( ((long) (x) ) < -2147483648 )) )) || haxe.lang.Runtime.toBool(((java.lang.Boolean) (( ((long) (x) ) > 2147483647 )) )) )) 
		{
			//line 68 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
			throw haxe.lang.HaxeException.wrap("Overflow");
		}
		
		//line 68 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
		long x1 = timespan2.seconds;
		//line 68 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
		if (( haxe.lang.Runtime.toBool(((java.lang.Boolean) (( ((long) (x1) ) < -2147483648 )) )) || haxe.lang.Runtime.toBool(((java.lang.Boolean) (( ((long) (x1) ) > 2147483647 )) )) )) 
		{
			//line 68 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
			throw haxe.lang.HaxeException.wrap("Overflow");
		}
		
		//line 68 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
		core.time.__TimeSpan totalSpan = core.time._TimeSpan.TimeSpan_Impl_._new(new haxe.lang.DynamicObject(new java.lang.String[]{}, new java.lang.Object[]{}, new java.lang.String[]{"nanoseconds", "seconds"}, new double[]{((double) (((double) (( timespan1.nanoseconds + timespan2.nanoseconds )) )) ), ((double) (((double) (( ((int) (((long) (x) )) ) + ((int) (((long) (x1) )) ) )) )) )}));
		//line 69 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
		core.time.__TimeSpan equalsSpan = core.time._TimeSpan.TimeSpan_Impl_._new(new haxe.lang.DynamicObject(new java.lang.String[]{}, new java.lang.Object[]{}, new java.lang.String[]{"days", "hours"}, new double[]{((double) (((double) (3) )) ), ((double) (((double) (5) )) )}));
		//line 74 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
		utest.Assert.equals(totalSpan.get_totalSeconds(), equalsSpan.get_totalSeconds(), null, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"test.TimeSpanCase", "test/TimeSpanCase.hx", "testAddSpan"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (74) )) )}));
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
		{
			//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
			boolean __temp_executeDef1 = true;
			//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
			switch (field.hashCode())
			{
				case -1541204327:
				{
					//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
					if (field.equals("testAddSpan")) 
					{
						//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
						__temp_executeDef1 = false;
						//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testAddSpan")) );
					}
					
					//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
					break;
				}
				
				
				case -738729907:
				{
					//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
					if (field.equals("testTotalSeconds")) 
					{
						//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
						__temp_executeDef1 = false;
						//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testTotalSeconds")) );
					}
					
					//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
					break;
				}
				
				
				case 1911813005:
				{
					//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
					if (field.equals("testMakeEmpty")) 
					{
						//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
						__temp_executeDef1 = false;
						//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testMakeEmpty")) );
					}
					
					//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
					break;
				}
				
				
				case -1440778147:
				{
					//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
					if (field.equals("testTotalHours")) 
					{
						//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
						__temp_executeDef1 = false;
						//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testTotalHours")) );
					}
					
					//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
					break;
				}
				
				
				case 91938121:
				{
					//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
					if (field.equals("testTotalDays")) 
					{
						//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
						__temp_executeDef1 = false;
						//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "testTotalDays")) );
					}
					
					//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
					break;
				}
				
				
			}
			
			//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
			if (__temp_executeDef1) 
			{
				//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, java.lang.Object[] dynargs)
	{
		//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
		{
			//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
			boolean __temp_executeDef1 = true;
			//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
			switch (field.hashCode())
			{
				case -1541204327:
				{
					//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
					if (field.equals("testAddSpan")) 
					{
						//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
						__temp_executeDef1 = false;
						//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
						this.testAddSpan();
					}
					
					//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
					break;
				}
				
				
				case -738729907:
				{
					//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
					if (field.equals("testTotalSeconds")) 
					{
						//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
						__temp_executeDef1 = false;
						//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
						this.testTotalSeconds();
					}
					
					//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
					break;
				}
				
				
				case 1911813005:
				{
					//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
					if (field.equals("testMakeEmpty")) 
					{
						//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
						__temp_executeDef1 = false;
						//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
						this.testMakeEmpty();
					}
					
					//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
					break;
				}
				
				
				case -1440778147:
				{
					//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
					if (field.equals("testTotalHours")) 
					{
						//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
						__temp_executeDef1 = false;
						//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
						this.testTotalHours();
					}
					
					//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
					break;
				}
				
				
				case 91938121:
				{
					//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
					if (field.equals("testTotalDays")) 
					{
						//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
						__temp_executeDef1 = false;
						//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
						this.testTotalDays();
					}
					
					//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
					break;
				}
				
				
			}
			
			//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
			if (__temp_executeDef1) 
			{
				//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 9 "d:\\Workspace\\Core\\test\\TimeSpanCase.hx"
		return null;
	}
	
	
}


